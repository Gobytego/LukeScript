#!/bin/bash
#===================================================================================
# INSTALL SCRIPTS
# FILE: install
# DESCRIPTION: automatize installation of set of scripts
# AUTHOR: Leonardo Marco
# VERSION: 1.0
# CREATED: 2020.03.29
# LICENSE: GNU General Public License v3.0
#===================================================================================

#=== GLOBAL CONFIG =================================================================
shopt -s extglob														# Activate extendend Bash expasions
base_dir="$(dirname "$(readlink -f "$0")")"								# Install script path
echo "$PATH" | grep -q sbin || export PATH="/sbin/:/usr/sbin:$PATH"		# PATH with sbin
IFS=$'\n\t'																# field separator

#=== GLOBAL VARIABLES ===============================================================
unset naction															# Global naction counter
unset scripts 															# List of all install scripts path




#=== FUNCTION ======================================================================
# NAME: help
# DESCRIPTION: Show command help
#===================================================================================
function help() {
	echo -e 'Exec scripts actions
Usage: '$(basename $0)' [-l] [-a <actions>] [-y] [-d] [-h]
   \e[1m-l\e[0m\t\tOnly list actions 
   \e[1m-a <actions>\e[0m\tOnly exec selected actions by number range (e.g: -a 5,6,10-15)
   \e[1m-a <pattern>\e[0m\tOnly exec selected actions by text pattern (e.g: -a terminator)
   \e[1m-y\e[0m\t\tAuto-answer yes to all actions
   \e[1m-d\e[0m\t\tAuto-answer default to all actions
   \e[1m-h\e[0m\t\tShow this help'
	exit 0
}


#=== FUNCTION ======================================================================
# NAME: ask_action
# DESCRIPTION: show action description and asks if install it or not
# PARAMS
#	$1	action field (action description)
#	$2	info field 
#	$3	default field
#
# EXIT CODE: 
#	0-> do the action
#	1-> dont do de action
#===================================================================================
function ask_action() {
	action="$1"
	info="$2"
	default="${3,,}"; default="${default:0:1}"; 
	[ "$default" != "n" ] && default="y"

	# Only show header in list mode
	[ "$list" ] && echo -e " [$naction] $action ($default)" && return 1

	# Show action 
	[ "${default,,}" = "y" ] && q="(Y/n)?" || q="(y/N))?"
	echo -en "\n\e[33m${info}\n\e[39m\e[1m [$naction] \e[4m${action}\e[0m $q "
	
	# Ask if install
	case "$yes" in
		allyes) 	q="y"; echo	"$q"					;;
		default) 	q="$default"; echo "$q"				;;
		*)	 		read q; q="${q,,}"; q="${q:0:1}"	;;
	esac
	
	# Exit code
	[ "$q" != "n" ] && [ "$q" != "y" ] && q="$default"
	[ "${q,,}" != "n" ] && return 0
	return 1
}



#=== FUNCTION ======================================================================
# NAME: expand_actions
# DESCRIPTION: get action unexpanded and expand it and save in action variable
#	1-10,12 -> actions=1 2 3 4 5 6 7 8 9 10 12
#   all 	-> actions=1 2 3 4 5 6 ... n
#   bash 	-> actions=3 4 5 (all actions with bash in description)
# PARAMS
#	$1	actions unexpanded
# EXIT CODE: 
#	0-> do the action
#	1-> dont do de action
#===================================================================================
function expand_actions() {
	local actions_unexpanded="$1"
	actions=""

	if [ "${actions_unexpanded,,}" = "all" ]; then
		actions=$(seq -s" " 1 $(echo "$scripts" | wc -l))
		return
	fi

	for a in $(echo "$actions_unexpanded" | tr "," " "); do
			# Is text 
			if echo "$a" | grep -q "[a-zA-Z]"; then
				actions="$actions $(bash -c "$(readlink -f "$0") -l" | grep -i "$a" | cut -f1 -d"]" | tr -d "[]" | tr '$\n' " ")"
			# Is a range
			elif echo "$a" | grep -qE "[0-9]"*-"[0-9]"; then
				actions="$actions $(eval echo {$(echo $a|sed "s/-/../")})"
			# Is a number 
			elif [ "$a" -eq 0 ] &>/dev/null; [ $? -le 1 ]; then
				actions="$actions $a"
			fi
		done	
}



# READ PARAMS
while getopts ":hlyda:" o; do
	case "$o" in
	h)	help 									;;
	l)	list="true"								;;
	y)	yes="allyes"							;;
	d)	yes="default"							;;
	a)	actions="$OPTARG"						;;	# -a with argument
	*)	[ "$OPTARG" = "a" ] && actions="all"	;;	# -a without argument
	esac
done


# CHECK ROOT PRIVILEGES
[ ! "$list" ] && [ "$(id -u)" -ne 0 ] && echo "Administrative privileges needed" && exit 1


# CHECK DEBIAN VERSION
if (! cat /etc/*release | grep -i debian || ! cat /etc/*release | egrep -i "buster|stretch") &> /dev/null; then
	echo "Seems you are not running Debian Buster distro"
	echo "Some actions may fail. Cross your fingers and press enter..."
	read
fi


# GET ALL SCRIPTS PATH
scripts="$(ls "$base_dir"/install_*/install.sh 2>/dev/null)
$(ls "$base_dir"/config_*/install.sh 2>/dev/null)
$(ls "$base_dir"/script_*/install.sh 2>/dev/null)
$(ls "$base_dir"/theme_*/install.sh 2>/dev/null)
$(ls "$base_dir"/!(install_*|script_*|config_*|theme_*)/install.sh 2>/dev/null)"


# NO PARAMS: LIST AND ASK FOR ACTION
if [ ! "$list" ] && [ ! "$actions" ]; then
	# List all actions
	bash -c "$(readlink -f "$0") -l"
	# Select actions interactive
	unset a actions
	while [ ! "$actions" ]; do
		read -p "Select actions: " a
		expand_actions "$a"
		[ ! "$actions" ] && a=""
	done
elif [ "$actions" ]; then
	expand_actions "$actions"
fi


# LOOP ALL SCRIPTS AND ASK FOR INSTALL IF SELECTED
naction=0
for script in $scripts; do
	head="$(head -10 "$script")"
	# Get ACTION field:
	action="$(echo "$head" | grep "#[[:blank:]]*ACTION:" | sed 's/#[[:blank:]]*ACTION:[[:blank:]]*//')"
	[ ! "$action" ] && continue
	# Get INFO field:
	info="$(echo "$head" | grep "#[[:blank:]]*INFO:" | sed 's/#[[:blank:]]*INFO:[[:blank:]]*//')"
	# Get DEFAULTfield:
	default="$(echo "$head" | grep "#[[:blank:]]*DEFAULT:" | sed 's/#[[:blank:]]*DEFAULT:[[:blank:]]*//')"

	naction=$((naction+1))

	# Skip action if not selected
	[ "$actions" ] && ! echo "$actions" | grep -w "$naction" &> /dev/null && continue 1

	if ask_action "$action" "$info" "$default"; then
		bash "$script"		# EXEC SCRIPT
	fi
done


# REBOOT?
if [ ! "$list" ] && [ ! "$actions" ] && ask_action "Reboot" "" "y"; then 
	reboot
fi

echo
