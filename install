#!/bin/bash
#===================================================================================
# INSTALL SCRIPTS
# FILE: install
# DESCRIPTION: automatize installation of set of scripts
# AUTHOR: Leonardo Marco
# VERSION: 1.0
# CREATED: 2020.03.29
# LICENSE: GNU General Public License v3.0
#===================================================================================

#=== GLOBAL CONFIG =================================================================
shopt -s extglob														# Activate extendend Bash expasions
base_dir="$(dirname "$(readlink -f "$0")")"								# Install script path
echo "$PATH" | grep -q sbin || export PATH="/sbin/:/usr/sbin:$PATH"		# PATH with sbin

#=== GLOBAL VARIABLES ===============================================================
unset actions 															# Global selected actions array
unset naction															# Global naction counter
unset scripts 															# List of all paths scripts detected
unset nscripts															# Num of sctrips in list $scripts


#=== FUNCTION ======================================================================
# NAME: help
# DESCRIPTION: Show command help
#===================================================================================
function help() {
	echo -e 'Exec scripts actions
Usage: '$(basename $0)' [-l] [-a <actions>] [-y] [-d] [-h]
   \e[1m-l\e[0m\t\tOnly list actions 
   \e[1m-a <actions>\e[0m\tOnly exec selected actions by number range or text pattern (comma separated)
   \e[1m-y\e[0m\t\tAuto-answer yes to all actions
   \e[1m-d\e[0m\t\tAuto-answer default to all actions
   \e[1m-h\e[0m\t\tShow this help

 Samples:
   \e[1minstall -l\e[0m\t\tList all actions
   \e[1minstall\e[0m\t\tExec all actions asking if install or not
   \e[1minstall -a 1-5,12\e[0m\tOnly exec actions 1 to 5 and 12
   \e[1minstall -a grub\e[0m\tOnly exec actions with grub text in description
   \e[1minstall -d\e[0m\t\tExec all actions with Y has default answer (no ask)
   \e[1minstall -y\e[0m\t\tExec all actions (no ask)'
	exit 0
}



#=== FUNCTION ======================================================================
# NAME: ask_action
# DESCRIPTION: show action description and asks if install it or not
# PARAMS
#	$1	action field (description)
#	$2	info field (more info)
#	$3	default field (y|n|empty)
#
# EXIT CODE: 
#	0-> do the action
#	1-> dont do de action
#===================================================================================
function ask_action() {
	action="$1"
	info="$2"
	default="${3,,}"; default="${default:0:1}"; 
	[ "$default" != "n" ] && default="y"

	# Only show header in list mode
	[ "$list" ] && echo -e " [$naction] $action (default: $default)" && return 1

	# Show action 
	[ "${default,,}" = "y" ] && q="(Y/n)?" || q="(y/N))?"
	echo -en "\n\e[33m${info}\n\e[39m\e[1m [$naction] \e[4m${action}\e[0m $q "
	
	# Ask if install
	case "$yes" in
		allyes) 	q="y"; echo	"$q"					;;
		default) 	q="$default"; echo "$q"				;;
		*)	 		read q; q="${q,,}"; q="${q:0:1}"	;;
	esac
	
	# Exit code
	[ "$q" != "n" ] && [ "$q" != "y" ] && q="$default"
	[ "${q,,}" != "n" ] && return 0
	return 1
}



#=== FUNCTION ======================================================================
# NAME: expand_actions
# DESCRIPTION: get action unexpanded and expand it and save in actions array
#	1-10,12 -> actions=1 2 3 4 5 6 7 8 9 10 12
#   all 	-> actions=1 2 3 4 5 6 ... n
#   bash 	-> actions=3 4 5 (all actions with bash in description)
# PARAMS
#	$1	actions unexpanded
# EXIT CODE: 
#	0-> do the action
#	1-> dont do de action
#===================================================================================
function expand_actions() {
	local actions_unexpanded="$1"
	unset actions

	if [ ! "${actions_unexpanded,,}" ]; then
		actions=($(seq -s" " 1 "$nscripts"))
		return
	fi

	IFS=$'\n\t '
	for a in $(echo "$actions_unexpanded" | tr "," " "); do
		# Is text 
		if echo "$a" | grep "[a-zA-Z]" &>/dev/null; then
			actions=(${actions[*]} $(bash -c "$(readlink -f "$0") -l" | grep -i "$a" &>/dev/null | cut -f1 -d"]" | tr -d "[]" | tr '$\n' " "))
		# Is a range
		elif echo "$a" | grep -E "[0-9]"*-"[0-9]" &>/dev/null; then
			actions=(${actions[*]} $(eval echo {$(echo $a|sed "s/-/../")}))
		# Is a number 
		elif [ "$a" -eq 0 ] &>/dev/null; [ $? -le 1 ]; then
			actions=(${actions[*]} $a)
		fi
	done

	# Remove invalid actions
	a="${actions[*]}"; unset actions
	for a in $a; do
		[ "$a" -ge 1 ] && [ "$a" -le "$nscripts" ] && actions=(${actions[*]} $a)
	done
}



# READ PARAMS
while getopts ":hlyda:" o; do
	case "$o" in
	h)	help 				;;
	l)	list="true"			;;
	y)	yes="allyes"		;;
	d)	yes="default"		;;
	a)	actions="$OPTARG"	;;	
	esac
done


# CHECK ROOT PRIVILEGES
[ ! "$list" ] && [ "$(id -u)" -ne 0 ] && echo "Administrative privileges needed" && exit 1


# CHECK DEBIAN VERSION
if (! cat /etc/*release | grep -i debian || ! cat /etc/*release | egrep -i "buster|stretch") &> /dev/null; then
	echo "Seems you are not running Debian Buster distro"
	echo "Some actions may fail. Cross your fingers and press enter..."
	read
fi


# GET ALL SCRIPTS PATHS
IFS=$'\n\t'
scripts="$(ls "$base_dir"/install_*/install.sh 2>/dev/null)
$(ls "$base_dir"/config_*/install.sh 2>/dev/null)
$(ls "$base_dir"/script_*/install.sh 2>/dev/null)
$(ls "$base_dir"/theme_*/install.sh 2>/dev/null)
$(ls "$base_dir"/!(install_*|script_*|config_*|theme_*)/install.sh 2>/dev/null)"
scripts="$(echo "$scripts" | sed '/^$/d')"		# Delte empty lines

nscripts=$(echo "$scripts" | wc -l)
if [ "$nscripts" -eq 0 ]; then
	echo "No action scripts found!"
	exit 1
fi

# EXPAND ACTIONS
expand_actions "$actions"
if [ ! "$actions" ]; then
	echo "No actions to exec!"
	exit 1
fi


# LOOP ALL SCRIPTS AND ASK FOR INSTALL IF SELECTED
naction=0
for script in $scripts; do
	head="$(head -10 "$script")"
	# Get ACTION field:
	action="$(echo "$head" | grep "#[[:blank:]]*ACTION:" | sed 's/#[[:blank:]]*ACTION:[[:blank:]]*//')"
	[ ! "$action" ] && continue
	# Get INFO field:
	info="$(echo "$head" | grep "#[[:blank:]]*INFO:" | sed 's/#[[:blank:]]*INFO:[[:blank:]]*//')"
	# Get DEFAULTfield:
	default="$(echo "$head" | grep "#[[:blank:]]*DEFAULT:" | sed 's/#[[:blank:]]*DEFAULT:[[:blank:]]*//')"

	naction=$((naction+1))

	# Skip action if not selected
	echo "${actions[*]}" | grep -qw "$naction" || continue

	# Exec script if answer y
	ask_action "$action" "$info" "$default" && bash "$script"
done

echo
